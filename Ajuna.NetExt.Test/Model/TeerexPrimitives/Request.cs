//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.PrimitiveTypes;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;


namespace Ajuna.NetApi.Model.TeerexPrimitives
{
    
    
    /// <summary>
    /// >> 158 - Composite[teerex_primitives.Request]
    /// </summary>
    public sealed class Request : BaseType
    {
        
        /// <summary>
        /// >> shard
        /// </summary>
        private Ajuna.NetApi.Model.PrimitiveTypes.H256 _shard;
        
        /// <summary>
        /// >> cyphertext
        /// </summary>
        private BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8> _cyphertext;
        
        public Ajuna.NetApi.Model.PrimitiveTypes.H256 Shard
        {
            get
            {
                return this._shard;
            }
            set
            {
                this._shard = value;
            }
        }
        
        public BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8> Cyphertext
        {
            get
            {
                return this._cyphertext;
            }
            set
            {
                this._cyphertext = value;
            }
        }
        
        public override string TypeName()
        {
            return "Request";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Shard.Encode());
            result.AddRange(Cyphertext.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Shard = new Ajuna.NetApi.Model.PrimitiveTypes.H256();
            Shard.Decode(byteArray, ref p);
            Cyphertext = new BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>();
            Cyphertext.Decode(byteArray, ref p);
            TypeSize = p - start;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Base;
using Ajuna.NetApi.Model.Types;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;


namespace Ajuna.NetApi.Model.SpRuntime
{
    
    
    public enum Era
    {
        
        Immortal,
        
        Mortal1,
        
        Mortal2,
        
        Mortal3,
        
        Mortal4,
        
        Mortal5,
        
        Mortal6,
        
        Mortal7,
        
        Mortal8,
        
        Mortal9,
        
        Mortal10,
        
        Mortal11,
        
        Mortal12,
        
        Mortal13,
        
        Mortal14,
        
        Mortal15,
        
        Mortal16,
        
        Mortal17,
        
        Mortal18,
        
        Mortal19,
        
        Mortal20,
        
        Mortal21,
        
        Mortal22,
        
        Mortal23,
        
        Mortal24,
        
        Mortal25,
        
        Mortal26,
        
        Mortal27,
        
        Mortal28,
        
        Mortal29,
        
        Mortal30,
        
        Mortal31,
        
        Mortal32,
        
        Mortal33,
        
        Mortal34,
        
        Mortal35,
        
        Mortal36,
        
        Mortal37,
        
        Mortal38,
        
        Mortal39,
        
        Mortal40,
        
        Mortal41,
        
        Mortal42,
        
        Mortal43,
        
        Mortal44,
        
        Mortal45,
        
        Mortal46,
        
        Mortal47,
        
        Mortal48,
        
        Mortal49,
        
        Mortal50,
        
        Mortal51,
        
        Mortal52,
        
        Mortal53,
        
        Mortal54,
        
        Mortal55,
        
        Mortal56,
        
        Mortal57,
        
        Mortal58,
        
        Mortal59,
        
        Mortal60,
        
        Mortal61,
        
        Mortal62,
        
        Mortal63,
        
        Mortal64,
        
        Mortal65,
        
        Mortal66,
        
        Mortal67,
        
        Mortal68,
        
        Mortal69,
        
        Mortal70,
        
        Mortal71,
        
        Mortal72,
        
        Mortal73,
        
        Mortal74,
        
        Mortal75,
        
        Mortal76,
        
        Mortal77,
        
        Mortal78,
        
        Mortal79,
        
        Mortal80,
        
        Mortal81,
        
        Mortal82,
        
        Mortal83,
        
        Mortal84,
        
        Mortal85,
        
        Mortal86,
        
        Mortal87,
        
        Mortal88,
        
        Mortal89,
        
        Mortal90,
        
        Mortal91,
        
        Mortal92,
        
        Mortal93,
        
        Mortal94,
        
        Mortal95,
        
        Mortal96,
        
        Mortal97,
        
        Mortal98,
        
        Mortal99,
        
        Mortal100,
        
        Mortal101,
        
        Mortal102,
        
        Mortal103,
        
        Mortal104,
        
        Mortal105,
        
        Mortal106,
        
        Mortal107,
        
        Mortal108,
        
        Mortal109,
        
        Mortal110,
        
        Mortal111,
        
        Mortal112,
        
        Mortal113,
        
        Mortal114,
        
        Mortal115,
        
        Mortal116,
        
        Mortal117,
        
        Mortal118,
        
        Mortal119,
        
        Mortal120,
        
        Mortal121,
        
        Mortal122,
        
        Mortal123,
        
        Mortal124,
        
        Mortal125,
        
        Mortal126,
        
        Mortal127,
        
        Mortal128,
        
        Mortal129,
        
        Mortal130,
        
        Mortal131,
        
        Mortal132,
        
        Mortal133,
        
        Mortal134,
        
        Mortal135,
        
        Mortal136,
        
        Mortal137,
        
        Mortal138,
        
        Mortal139,
        
        Mortal140,
        
        Mortal141,
        
        Mortal142,
        
        Mortal143,
        
        Mortal144,
        
        Mortal145,
        
        Mortal146,
        
        Mortal147,
        
        Mortal148,
        
        Mortal149,
        
        Mortal150,
        
        Mortal151,
        
        Mortal152,
        
        Mortal153,
        
        Mortal154,
        
        Mortal155,
        
        Mortal156,
        
        Mortal157,
        
        Mortal158,
        
        Mortal159,
        
        Mortal160,
        
        Mortal161,
        
        Mortal162,
        
        Mortal163,
        
        Mortal164,
        
        Mortal165,
        
        Mortal166,
        
        Mortal167,
        
        Mortal168,
        
        Mortal169,
        
        Mortal170,
        
        Mortal171,
        
        Mortal172,
        
        Mortal173,
        
        Mortal174,
        
        Mortal175,
        
        Mortal176,
        
        Mortal177,
        
        Mortal178,
        
        Mortal179,
        
        Mortal180,
        
        Mortal181,
        
        Mortal182,
        
        Mortal183,
        
        Mortal184,
        
        Mortal185,
        
        Mortal186,
        
        Mortal187,
        
        Mortal188,
        
        Mortal189,
        
        Mortal190,
        
        Mortal191,
        
        Mortal192,
        
        Mortal193,
        
        Mortal194,
        
        Mortal195,
        
        Mortal196,
        
        Mortal197,
        
        Mortal198,
        
        Mortal199,
        
        Mortal200,
        
        Mortal201,
        
        Mortal202,
        
        Mortal203,
        
        Mortal204,
        
        Mortal205,
        
        Mortal206,
        
        Mortal207,
        
        Mortal208,
        
        Mortal209,
        
        Mortal210,
        
        Mortal211,
        
        Mortal212,
        
        Mortal213,
        
        Mortal214,
        
        Mortal215,
        
        Mortal216,
        
        Mortal217,
        
        Mortal218,
        
        Mortal219,
        
        Mortal220,
        
        Mortal221,
        
        Mortal222,
        
        Mortal223,
        
        Mortal224,
        
        Mortal225,
        
        Mortal226,
        
        Mortal227,
        
        Mortal228,
        
        Mortal229,
        
        Mortal230,
        
        Mortal231,
        
        Mortal232,
        
        Mortal233,
        
        Mortal234,
        
        Mortal235,
        
        Mortal236,
        
        Mortal237,
        
        Mortal238,
        
        Mortal239,
        
        Mortal240,
        
        Mortal241,
        
        Mortal242,
        
        Mortal243,
        
        Mortal244,
        
        Mortal245,
        
        Mortal246,
        
        Mortal247,
        
        Mortal248,
        
        Mortal249,
        
        Mortal250,
        
        Mortal251,
        
        Mortal252,
        
        Mortal253,
        
        Mortal254,
        
        Mortal255,
    }
    
    /// <summary>
    /// >> 217 - Variant[sp_runtime.generic.era.Era]
    /// </summary>
    public sealed class EnumEra : BaseEnumExt<Era, BaseVoid>
    {
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            var enumByte = byteArray[p];
            Value = (Era)System.Enum.Parse(typeof(Era), enumByte.ToString(), true);
            p += 1;
            Value2 = DecodeOneOf(enumByte, byteArray, ref p);
            TypeSize = p - start;
        }
        
        private Ajuna.NetApi.Model.Types.IType DecodeOneOf(byte value, byte[] byteArray, ref int p)
        {
            IType result;
            if (value == 0) { return null; };
            result = new U8();
            result.Decode(byteArray, ref p);
            return result;
        }
    }
}
